This is XeTeX, Version 3.14159265-2.6-0.99996 (TeX Live 2016) (preloaded format=xelatex 2016.5.22)  1 JAN 2017 22:38
entering extended mode
 restricted \write18 enabled.
 file:line:error style messages enabled.
 %&-line parsing enabled.
**dsa.tex
(./dsa.tex
LaTeX2e <2016/03/31>
Babel <3.9r> and hyphenation patterns for 83 language(s) loaded.
(/usr/local/texlive/2016/texmf-dist/tex/latex/base/article.cls
Document Class: article 2014/09/29 v1.4h Standard LaTeX document class
(/usr/local/texlive/2016/texmf-dist/tex/latex/base/size10.clo
File: size10.clo 2014/09/29 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@section=\count80
\c@subsection=\count81
\c@subsubsection=\count82
\c@paragraph=\count83
\c@subparagraph=\count84
\c@figure=\count85
\c@table=\count86
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
No file dsa.aux.
\openout1 = `dsa.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <12> on input line 7.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <8> on input line 7.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <6> on input line 7.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 14.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line 14.

Overfull \hbox (0.7784pt too wide) in paragraph at lines 11--19
\OT1/cmr/m/n/10 Data Struc-ture Anal-y-sis is a form of field-sensitive, contex
t-sensitive, unification-
 []

[1

] [2]
LaTeX Font Info:    Try loading font information for OMS+cmr on input line 162.

 (/usr/local/texlive/2016/texmf-dist/tex/latex/base/omscmr.fd
File: omscmr.fd 2014/09/29 v2.5h Standard LaTeX font definitions
)
LaTeX Font Info:    Font shape `OMS/cmr/m/n' in size <10> not available
(Font)              Font shape `OMS/cmsy/m/n' tried instead on input line 162.

Overfull \hbox (4.3454pt too wide) in paragraph at lines 162--164
[]\OT1/cmtt/m/n/10 DSGraph* getDSGraph(const Function& F) const\OT1/cmr/m/n/10 
: re-turn the DS-Graph
 []

[3]
Overfull \hbox (1.19232pt too wide) in paragraph at lines 186--189
[]\OT1/cmtt/m/n/10 DSNodeHandle& getReturnNodeFor(const Function& F)\OT1/cmr/m/
n/10 : get the re-turn
 []


Overfull \hbox (0.24724pt too wide) in paragraph at lines 191--198
[]\OT1/cmtt/m/n/10 static void computeNodeMapping(const DSNodeHandle& NH1, cons
t
 []


Overfull \hbox (29.2748pt too wide) in paragraph at lines 191--198
\OT1/cmtt/m/n/10 DSNodeHandle& NH2, NodeMapTy& NodeMap, bool StrictChecking = t
rue)\OT1/cmr/m/n/10 :
 []


Overfull \hbox (2.49785pt too wide) in paragraph at lines 200--203
[]\OT1/cmtt/m/n/10 void computeGGtoGMapping(InvNodeMapTy& InvNodeMap)\OT1/cmr/m
/n/10 : com-pute the
 []


Overfull \hbox (5.4972pt too wide) in paragraph at lines 204--208
[]\OT1/cmtt/m/n/10 void computeCalleeCallerMapping(DSCallSite CS, const Functio
n&
 []

[4]
Overfull \hbox (22.4968pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 ShadowNode      = 0,        // Nothing is known about th
is node...[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 AllocaNode      = 1 << 0,   // This node was allocated w
ith alloca[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 HeapNode        = 1 << 1,   // This node was allocated w
ith malloc[] 
 []


Overfull \hbox (69.74638pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 GlobalNode      = 1 << 2,   // This node was allocated b
y a global var decl[] 
 []


Overfull \hbox (32.9967pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 ExternFuncNode  = 1 << 3,   // This node contains extern
al functions[] 
 []


Overfull \hbox (22.4968pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 ExternGlobalNode = 1 << 4,  // This node contains extern
al globals[] 
 []


Overfull \hbox (69.74638pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 UnknownNode     = 1 << 5,   // This node points to unkno
wn allocated memory[] 
 []


Overfull \hbox (32.9967pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 ModifiedNode    = 1 << 7,   // This node is modified in 
this context[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 ReadNode        = 1 << 8,   // This node is read in this
 context[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 ArrayNode       = 1 << 9,   // This node is treated like
 an array[] 
 []


Overfull \hbox (43.49661pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 ExternalNode    = 1 << 11,  // This node comes from an e
xternal source[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 IntToPtrNode    = 1 << 12,   // This node comes from an 
int cast[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 PtrToIntNode    = 1 << 13,  // This node escapes to an i
nt cast[] 
 []


Overfull \hbox (6.74693pt too wide) in paragraph at lines 236--236
[]    \OT1/cmtt/m/n/10 VAStartNode     = 1 << 14,  // This node is from a vasta
rt call[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isAllocaNode()     const { return NodeType & AllocaNo
de;    }[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isHeapNode()       const { return NodeType & HeapNode
;      }[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isGlobalNode()     const { return NodeType & GlobalNo
de;    }[] 
 []


Overfull \hbox (17.24684pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isExternFuncNode() const { return NodeType & ExternFu
ncNode; }[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isUnknownNode()    const { return NodeType & UnknownN
ode;   }[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isModifiedNode()   const { return NodeType & Modified
Node;  }[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isReadNode()       const { return NodeType & ReadNode
;      }[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isArrayNode()      const { return NodeType & ArrayNod
e;     }[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isCollapsedNode()  const { return NodeType & Collapse
dNode; }[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isIncompleteNode() const { return NodeType & Incomple
teNode;}[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isCompleteNode()   const { return !isIncompleteNode()
;      }[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isExternalNode()   const { return NodeType & External
Node;  }[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isIntToPtrNode()   const { return NodeType & IntToPtr
Node;  }[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isPtrToIntNode()   const { return NodeType & PtrToInt
Node;  }[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 256--256
[]  \OT1/cmtt/m/n/10 bool isVAStartNode()    const { return NodeType & VAStartN
ode;   }[] 
 []


Overfull \hbox (1.37387pt too wide) in paragraph at lines 260--262
[]\OT1/cmtt/m/n/10 DSGraph* getParentGraph() const\OT1/cmr/m/n/10 : get the DS-
Graph of which this node
 []

[5]
Overfull \hbox (47.49683pt too wide) in paragraph at lines 273--275
[]\OT1/cmtt/m/n/10 void markReachableNodes(llvm::DenseSet<const DSNode*>& Reach
ableNodes)
 []


Overfull \hbox (43.49661pt too wide) in paragraph at lines 306--306
[]  \OT1/cmtt/m/n/10 /// isDirectCall - Return true if this call site is a dire
ct call of the[] 
 []


Overfull \hbox (59.24648pt too wide) in paragraph at lines 306--306
[]  \OT1/cmtt/m/n/10 /// function specified by getCalleeFunc.  If not, it is an
 indirect call to[] 
 []


Overfull \hbox (11.99689pt too wide) in paragraph at lines 306--306
[]    \OT1/cmtt/m/n/10 assert(!CalleeF && CalleeN.getNode()); return CalleeN.ge
tNode();[] 
 []


LaTeX Warning: Reference `fungraph' on page 6 undefined on input line 317.

[6] [7] (./dsa.aux)

LaTeX Warning: There were undefined references.


LaTeX Warning: Label(s) may have changed. Rerun to get cross-references right.

 ) 
Here is how much of TeX's memory you used:
 250 strings out of 493591
 2726 string characters out of 6143546
 59754 words of memory out of 5000000
 3733 multiletter control sequences out of 15000+600000
 8063 words of font info for 29 fonts, out of 8000000 for 9000
 1347 hyphenation exceptions out of 8191
 24i,8n,19p,151b,187s stack positions out of 5000i,500n,10000p,200000b,80000s

Output written on dsa.pdf (7 pages).
